plugins {
	id 'groovy'
	id 'maven-publish'
	id 'org.hibernate.build.maven-repo-auth' version '3.0.0'
}

group = 'org.hibernate.build.gradle'
version = '2.0.0-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	compile gradleApi()
	compile localGroovy()
}

buildDir = 'target'

task sourcesJar(type: Jar, dependsOn: compileJava) {
	from sourceSets.main.allSource
	archiveClassifier.set('sources')
}

publishing {
	publications {
		plugin(MavenPublication) {
			from components.java

			artifact sourcesJar {
				classifier "sources"
			}

			pom.withXml {
				// append additional metadata
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST

					name 'Gradle plugin for XJC integration'
					description 'Integrates JAXB XJC functionality into a Gradle build'

					url 'https://github.com/sebersole/gradle-xjc-plugin'

					issueManagement {
						system 'github'
						url 'https://github.com/sebersole/gradle-xjc-plugin/issues'
					}

					scm {
						url 'https://github.com/sebersole/gradle-xjc-plugin'
						connection 'scm:git:https://github.com/sebersole/gradle-xjc-plugin.git'
						developerConnection 'scm:git:git@github.com:sebersole/gradle-xjc-plugin.git'
					}

					licenses {
						license {
							name 'Apache License, Version 2.0'
							url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}

					developers {
						developer {
							id 'sebersole'
							name 'Steve Ebersole'
							organization 'Hibernate.org'
							organizationUrl 'https://hibernate.org'
						}
					}
				}
			}
		}
	}

	repositories {
		maven {
			if ( version.endsWith( 'SNAPSHOT' ) ) {
				name 'jboss-snapshots-repository'
				url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
			}
			else {
				name 'jboss-releases-repository'
				url 'https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/'
			}
		}
	}
}

wrapper {
	// To upgrade the version of gradle used in the wrapper, run:
	//     ./gradlew wrapper --gradle-version NEW_VERSION
	distributionType = Wrapper.DistributionType.ALL
}
